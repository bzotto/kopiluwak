// 
// constants.js 
//
// Kopiluwak. Copyright (c) 2020 Ben Zotto
//

//
// Constant pool tags
// 

const CONSTANT_Class = 7;
const CONSTANT_Fieldref	= 9;
const CONSTANT_Methodref = 10;
const CONSTANT_InterfaceMethodref = 11;
const CONSTANT_String = 8;
const CONSTANT_Integer = 3;
const CONSTANT_Float = 4;
const CONSTANT_Long	= 5;
const CONSTANT_Double = 6;
const CONSTANT_NameAndType = 12;
const CONSTANT_Utf8	= 1;
const CONSTANT_MethodHandle	= 15;
const CONSTANT_MethodType = 16;
const CONSTANT_InvokeDynamic = 18;

//
// Access flags
//

const ACC_PUBLIC = 0x0001;	    	// Declared public; may be accessed from outside its package.
const ACC_PRIVATE = 0x0002; 		// Declared private; accessible only within the defining class.
const ACC_PROTECTED = 0x0004; 		// Declared protected; may be accessed within subclasses.
const ACC_STATIC = 0x0008; 			// Declared static.
const ACC_FINAL = 0x0010; 			// Declared final; must not be overridden (ยง5.4.5).
const ACC_SYNCHRONIZED = 0x0020; 	// Declared synchronized; invocation is wrapped by a monitor use.
const ACC_BRIDGE = 0x0040; 			// A bridge method, generated by the compiler.
const ACC_VARARGS = 0x0080; 		// Declared with variable number of arguments.
const ACC_NATIVE = 0x0100;			// Declared native; implemented in a language other than Java.
const ACC_ABSTRACT = 0x0400;		// Declared abstract; no implementation is provided.
const ACC_STRICT = 0x0800;			// Declared strictfp; floating-point mode is FP-strict.
const ACC_SYNTHETIC = 0x1000; 		// Declared synthetic; not present in the source code

//
// Method handle kinds
//

const REF_getField = 1;
const REF_getStatic	= 2;
const REF_putField = 3;
const REF_putStatic = 4;
const REF_invokeVirtual = 5;
const REF_invokeStatic = 6;
const REF_invokeSpecial	= 7;
const REF_newInvokeSpecial = 8;
const REF_invokeInterface = 9;
